var searchIndex = JSON.parse('{\
"wasmer_ruby":{"doc":"The <code>wasmer</code> Ruby package","t":[0,3,3,3,3,3,3,3,0,0,4,13,13,13,3,3,5,4,13,13,13,13,13,13,13,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Ruby","Boolean","Integer","Float","String","Array","Hash","Any","Wasmer","Wasi","Version","LATEST_VERSION","SNAPSHOT0","SNAPSHOT1","StateBuilder","Environment","get_version","Type","I32","I64","F32","F64","V128","EXTERN_REF","FUNC_REF","FunctionType","MemoryType","GlobalType","TableType","ExportType","ImportType","Store","Module","Instance","Exports","ImportObject","Function","Memory","Uint8View","Int8View","Uint16View","Int16View","Uint32View","Int32View","Global","Table","Value","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","new","argument","arguments","environment","environments","preopen_directory","preopen_directories","map_directory","map_directories","finalize","generate_import_object","new","params","results","new","minimum","maximum","shared","new","type","mutable","new","type","minimum","maximum","new","name","type","new","module","name","type","new","validate","new","name","exports","imports","custom_sections","serialize","deserialize","new","exports","length","method_missing","new","contains_namespace","register","new","call","type","new","type","size","data_size","grow","uint8_view","int8_view","uint16_view","int16_view","uint32_view","int32_view","new","mutable","value","type","new","i32","i64","f32","f64"],"q":["wasmer_ruby","wasmer_ruby::Ruby","","","","","","","wasmer_ruby","wasmer_ruby::Wasmer","wasmer_ruby::Wasmer::Wasi","","","","","","","wasmer_ruby::Wasmer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasmer_ruby::Ruby","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasmer_ruby::Wasmer::Wasi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasmer_ruby::Wasmerwasmer_ruby::Wasmer::Wasi","","","","","","","","","","","wasmer_ruby::Wasmer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Declare Ruby native types. It’s only for documentation …","A native Ruby boolean.","A native Ruby integer.","A native Ruby float.","A native Ruby string.","A native Ruby array.","A native Ruby hash.","Represents any kind of object.","The <code>Wasmer</code> module provides the entire Wasmer API to …","Wasmer’s WASI implementation.","Represents a WASI version.","","","","Convenient builder API for configuring WASI.","The environment provided to the WASI imports.","Detect the version of WASI being used based on the import …","A WebAssembly type.","","","","","","","","Represents the signature of a function that is either …","A descriptor for a WebAssembly memory type.","A descriptor for a WebAssembly global.","A descriptor for a table in a WebAssembly module.","Represents the type of a module’s export (not to be …","Represents the type of a module’s import. It is usually …","The store represents all global state that can be …","A WebAssembly module contains stateless WebAssembly code …","A WebAssembly instance is a stateful, executable instance …","Represents all the exports of an instance. It is built by …","An <code>ImportObject</code> represents all of the import data used …","Represents a WebAssembly function instance.","A WebAssembly memory instance.","","","","","","","Represents a WebAssembly global instance.","A WebAssembly table instance.","Represents a WebAssembly value of a specific type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds an argument.","Adds multiple arguments.","Add an environment variable pair.","Add environment variable pairs.","Preopen a directory with a different name exposed to the …","Preopen directories with a different name exposed to the …","Preopen a directory with a different name exposed to the …","Preopen directories with a different name exposed to the …","Produces a WASI [<code>Environment</code>] based on this state builder.","Create an [<code>ImportObject</code>] with an existing [<code>Environment</code>]. …","Creates a new <code>FunctionType</code>.","Returns the parameters.","Returns the results.","Creates a new <code>MemoryType</code>.","Returns the minimum size of the memory.","Returns the maximum size of the memory of any.","Returns whether the memory is shared or not.","Creates a new <code>GlobalType</code>.","Returns the type of the global.","Returns whether the global is mutable.","Creates a new <code>TableType</code>.","Returns the type of table.","Returns the minimum size of the table.","Returns the maximum size of the table if any.","Creates a new <code>ExportType</code>.","Returns the name of the export.","Returns the type of the export.","Creates a new <code>ImportType</code>.","Returns the module’s name of the import.","Returns the name of the import.","Returns the type of the import.","Creates a new <code>Store</code>.","Validates a new WebAssembly Module given the configuration…","Creates a new [<code>Module</code>].","Get or set the current name of the module.","Returns a list of [<code>ExportType</code>] objects, which represents …","Returns a list of [<code>ImportType</code>] objects, which represents …","Get the custom sections of the module given a <code>name</code>.","Serializes a module into a binary representation that the …","Deserializes a serialized module binary into a Module.","Creates a new <code>Instance</code>.","Returns all the exported entities.","Returns the number of exports.","Returns either a [<code>Function</code>], a [<code>Memory</code>], a [<code>Global</code>], or a …","Creates a new <code>ImportObject</code>.","Checks whether the import object contains a specific …","Registers a set of [<code>Function</code>], [<code>Memory</code>], [<code>Global</code>] or […","Creates a new <code>Function</code>. The <code>function</code> can be of kind <code>Symbol</code>…","Calls the function with arguments. It returns zero or …","Returns the function type.","Creates a new <code>Memory</code>.","Returns the memory type.","Returns the size (in pages) of the memory.","Returns the size (in bytes) of the memory.","Grows memory by the specified amount of WebAssembly pages.","Creates a read-and-write view over the memory data where …","Creates a read-and-write view over the memory data where …","Creates a read-and-write view over the memory data where …","Creates a read-and-write view over the memory data where …","Creates a read-and-write view over the memory data where …","Creates a read-and-write view over the memory data where …","Creates a new <code>Global</code>.","Returns whether the global is muable.","Get or set a new value to the global if mutable.","Returns the global type.","Creates a new <code>Table</code>.","Creates a new <code>Value</code> containing a <code>int32</code>.","Creates a new <code>Value</code> containing a <code>int64</code>.","Creates a new <code>Value</code> containing a <code>float32</code>.","Creates a new <code>Value</code> containing a <code>float64</code>."],"i":[0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,1,1,1,1,1,1,1,1,1,1,1,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,2,2,2,2,2,2,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,10,10,10,10,10,10,10,10,10,10,11,12,12,12,13,13,13,13,14,14,14,15,15,15,15,16,16,16,17,17,17,17,18,19,19,19,19,19,19,19,19,20,20,21,21,22,22,22,23,23,23,24,24,24,24,24,24,24,24,24,24,24,31,31,31,31,32,33,33,33,33],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["boolean",3],["module",3]],["version",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["string",3]]],[[["string",3]]],[[["string",3],["array",3]]],[[["string",3]]],[[["hash",3],["string",3]]],[[["string",3]]],[[["hash",3],["string",3]]],[[["string",3]]],[[["hash",3],["string",3]]],[[],["environment",3]],[[["store",3],["version",4]],["importobject",3]],[[["array",3],["type",4]]],[[],[["type",4],["array",3]]],[[],[["type",4],["array",3]]],[[["integer",3],["option",4],["boolean",3]]],[[],["integer",3]],[[],[["integer",3],["option",4]]],[[],["integer",3]],[[["boolean",3],["type",4]]],[[],["type",4]],[[],["boolean",3]],[[["integer",3],["option",4],["type",4]]],[[],["type",4]],[[],["integer",3]],[[],[["integer",3],["option",4]]],[[["string",3],["any",3]]],[[],["string",3]],[[],["type",4]],[[["string",3],["any",3]]],[[],["string",3]],[[],["string",3]],[[],["type",4]],[[]],[[["store",3],["string",3]],["boolean",3]],[[["store",3],["string",3]]],[[["string",3]]],[[],[["array",3],["exporttype",3]]],[[],[["importtype",3],["array",3]]],[[["string",3]],[["string",3],["array",3]]],[[],["string",3]],[[["string",3]]],[[["importobject",3],["module",3]]],[[],["exports",3]],[[],["integer",3]],[[["string",3]],["any",3]],[[]],[[["string",3]],["boolean",3]],[[["string",3],["any",3],["hash",3]]],[[["store",3],["any",3],["functiontype",3]]],[[["any",3]],["any",3]],[[],["functiontype",3]],[[["store",3],["memorytype",3]]],[[],["memorytype",3]],[[],["integer",3]],[[],["integer",3]],[[["integer",3]],["integer",3]],[[],["uint8view",3]],[[],["int8view",3]],[[],["uint16view",3]],[[],["int16view",3]],[[],["uint32view",3]],[[],["int32view",3]],[[["store",3],["value",3],["boolean",3]]],[[],["boolean",3]],[[["any",3]],["any",3]],[[],["globaltype",3]],[[["store",3],["tabletype",3],["value",3]]],[[["integer",3]]],[[["integer",3]]],[[["float",3]]],[[["float",3]]]],"p":[[4,"Version"],[4,"Type"],[3,"Boolean"],[3,"Integer"],[3,"Float"],[3,"String"],[3,"Array"],[3,"Hash"],[3,"Any"],[3,"StateBuilder"],[3,"Environment"],[3,"FunctionType"],[3,"MemoryType"],[3,"GlobalType"],[3,"TableType"],[3,"ExportType"],[3,"ImportType"],[3,"Store"],[3,"Module"],[3,"Instance"],[3,"Exports"],[3,"ImportObject"],[3,"Function"],[3,"Memory"],[3,"Uint8View"],[3,"Int8View"],[3,"Uint16View"],[3,"Int16View"],[3,"Uint32View"],[3,"Int32View"],[3,"Global"],[3,"Table"],[3,"Value"]]}\
}');
initSearch(searchIndex);